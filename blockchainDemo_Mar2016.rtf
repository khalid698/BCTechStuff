{\rtf1\ansi\ansicpg1252\deff0\deflang1033{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fswiss\fprq2\fcharset0 Calibri;}}
{\*\generator Msftedit 5.41.21.2510;}\viewkind4\uc1\pard\sa200\sl276\slmult1\qc\lang9\f0\fs72 Ethereum Blockchain Demo\ul\par
\ulnone\fs52 Asset Transfer and KYC\ul\par
\pard\sa160\sl252\slmult1\ulnone\fs24\tab\f1 The purpose of this script is to demonstrate the transfer of Ford Motor Company common stock from a fictitious custodian bank, New York Street Bank, to Northern Trust as the new custodian. Information identifying the owner of the asset will be retrieved from KYC contracts that are accessible to Northern Trust and New York Street.\ul\f0\fs52\par
\pard\sa200\sl276\slmult1 Setup\fs18\par
\ulnone\b\fs24 1. Start geth console\par
\tab\b0\fs18 geth attach\b\fs24\par
2. Create fungibleSecurity contract\par
\pard\li720\sa200\sl276\slmult1\b0\fs18 personal.unlockAccount(primary)\par
var _name = "Ford Motor Company - Common Stock";\par
var _identifier = "\f1 345370860\fs22 "\f0\fs18 ;\par
var _idType = 0;\par
var fungiblesecurityContract = web3.eth.contract([\{"constant":true,"inputs":[],"name":"name","outputs":[\{"name":"","type":"string"\}],"type":"function"\},\{"constant":true,"inputs":[\{"name":"","type":"uint256"\}],"name":"custodians","outputs":[\{"name":"","type":"address"\}],"type":"function"\},\{"constant":false,"inputs":[\{"name":"addresses","type":"address[]"\},\{"name":"addr","type":"address"\}],"name":"contains","outputs":[\{"name":"contained","type":"bool"\}],"type":"function"\},\{"constant":false,"inputs":[\{"name":"openingBalance","type":"uint256"\}],"name":"registerHolder","outputs":[],"type":"function"\},\{"constant":false,"inputs":[],"name":"kill","outputs":[],"type":"function"\},\{"constant":false,"inputs":[\{"name":"overrideProposal","type":"bytes32"\}],"name":"confirmOverride","outputs":[],"type":"function"\},\{"constant":true,"inputs":[],"name":"identifier","outputs":[\{"name":"","type":"string"\}],"type":"function"\},\{"constant":true,"inputs":[\{"name":"","type":"bytes32"\}],"name":"overrides","outputs":[\{"name":"accountToBeUpdated","type":"address"\},\{"name":"balanceChange","type":"int256"\},\{"name":"description","type":"string"\},\{"name":"timeProposed","type":"uint256"\},\{"name":"overrideGranted","type":"bool"\}],"type":"function"\},\{"constant":false,"inputs":[],"name":"getBalanceOnLoan","outputs":[\{"name":"balance","type":"uint256"\}],"type":"function"\},\{"constant":false,"inputs":[\{"name":"balanceChange","type":"int256"\},\{"name":"description","type":"string"\}],"name":"overrideBalance","outputs":[],"type":"function"\},\{"constant":true,"inputs":[\{"name":"","type":"address"\}],"name":"custodyBalances","outputs":[\{"name":"underCustody","type":"uint256"\},\{"name":"onLoan","type":"uint256"\}],"type":"function"\},\{"constant":false,"inputs":[],"name":"getBalanceUnderCustody","outputs":[\{"name":"balance","type":"uint256"\}],"type":"function"\},\{"constant":false,"inputs":[\{"name":"receiver","type":"address"\},\{"name":"amount","type":"uint256"\}],"name":"send","outputs":[],"type":"function"\},\{"constant":true,"inputs":[],"name":"idType","outputs":[\{"name":"","type":"uint8"\}],"type":"function"\},\{"inputs":[\{"name":"_name","type":"string"\},\{"name":"_identifier","type":"string"\},\{"name":"_idType","type":"uint8"\}],"type":"constructor"\},\{"anonymous":false,"inputs":[\{"indexed":false,"name":"from","type":"address"\},\{"indexed":false,"name":"to","type":"address"\},\{"indexed":false,"name":"amount","type":"uint256"\}],"name":"CustodyTransfer","type":"event"\},\{"anonymous":false,"inputs":[\{"indexed":false,"name":"proposalID","type":"bytes32"\},\{"indexed":false,"name":"accountToBeUpdated","type":"address"\},\{"indexed":false,"name":"amount","type":"int256"\},\{"indexed":false,"name":"description","type":"string"\}],"name":"ErrorCorrection","type":"event"\}]);\par
var fungiblesecurity = fungiblesecurityContract.new(\par
   _name,\par
   _identifier,\par
   _idType,\par
   \{\par
     from: web3.eth.accounts[0], \par
     data: '6060604052604051611494380380611494833981016040528080518201919060200180518201919060200180519060200190919050505b8260006000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061008557805160ff19168380011785556100b6565b828001600101855582156100b6579182015b828111156100b5578251826000505591602001919060010190610097565b5b5090506100e191906100c3565b808211156100dd57600081815060009055506001016100c3565b5090565b50508160016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061013257805160ff1916838001178555610163565b82800160010185558215610163579182015b82811115610162578251826000505591602001919060010190610144565b5b50905061018e9190610170565b8082111561018a5760008181506000905550600101610170565b5090565b505080600260006101000a81548160ff021916908302179055505b5050506112da806101ba6000396000f3606060405236156100cc576000357c01000000000000000000000000000000000000000000000000000000009004806306fdde03146100d95780632299bda6146101545780633da80d661461019657806341be2a9b1461020657806341c0e1b51461021e578063583294b51461022d5780637998a1c4146102455780637f47d60d146102c057806380a96cbf146103a0578063a10d02f2146103c3578063a9f6074e14610422578063cda4dee814610455578063d0679d3414610478578063fcc25cf414610499576100cc565b6100d75b610002565b565b005b6100e66004805050611198565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156101465780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61016a60048080359060200190919050506110bb565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101f06004808035906020019082018035906020019191908080602002602001604051908101604052809392919081815260200183836020028082843782019150505050505090909190803590602001909190505061086e565b6040518082815260200191505060405180910390f35b61021c6004808035906020019091905050610ef8565b005b61022b600480505061108d565b005b61024360048080359060200190919050506104bc565b005b6102526004805050611239565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156102b25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102d6600480803590602001909190505061112a565b604051808673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018060200184815260200183815260200182810382528581815460018160011615610100020316600290048152602001915080546001816001161561010002031660029004801561038d5780601f106103625761010080835404028352916020019161038d565b820191906000526020600020905b81548152906001019060200180831161037057829003601f168201915b5050965050505050505060405180910390f35b6103ad6004805050610a6f565b6040518082815260200191505060405180910390f35b6104206004808035906020019091908035906020019082018035906020019191908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050909091905050610ab1565b005b61043860048080359060200190919050506110fd565b604051808381526020018281526020019250505060405180910390f35b6104626004805050610a2d565b6040518082815260200191505060405180910390f35b61049760048080359060200190919080359060200190919050506108ef565b005b6104a660048050506110a8565b6040518082815260200191505060405180910390f35b60006000600060009150600090505b600360005080549050811015610561573373ffffffffffffffffffffffffffffffffffffffff16600360005082815481101561000257906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156105535781806001019250505b5b80806001019150506104cb565b60008260ff1611151561057357610002565b600660005060008581526020019081526020016000206000509250620151808360040160005054420311156105a757610002565b8260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614158061068257506106808360030160005080548060200260200160405190810160405280929190818152602001828054801561067557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610641575b50505050503361086e565b155b15610867578260030160005080548060010182818154818355818115116106db578183600052602060002091820191016106da91906106bc565b808211156106d657600081815060009055506001016106bc565b5090565b5b5050509190906000526020600020900160005b33909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff02191690830217905550506002600360005080549050048360030160005080549050101515610866576000836001016000505413156107ba578260010160005054600460005060008560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060000160008282825054019250508190555061084a565b82600101600050547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff02600460005060008560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000506000016000828282505403925050819055505b60018360050160006101000a81548160ff021916908302179055505b5b50505b5050565b60006000600090505b83518110156108df578273ffffffffffffffffffffffffffffffffffffffff1684828151811015610002579060200190602002015173ffffffffffffffffffffffffffffffffffffffff1614156108d157600191506108e8565b5b8080600101915050610877565b600091506108e8565b5092915050565b80600460005060003373ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060000160005054101561093157610a29565b80600460005060003373ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060000160008282825054039250508190555080600460005060008473ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000506000016000828282505401925050819055507f90c5d8794dcf7c60ab2d20912d5228389b28f74d32af01e40894a784a90b9ac2338383604051808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a15b5050565b6000600460005060003373ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050600001600050549050610a6c565b90565b6000600460005060003373ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050600101600050549050610aae565b90565b600060206040519081016040528060008152602001506000600060009150600090505b600360005080549050811015610b6a573373ffffffffffffffffffffffffffffffffffffffff16600360005082815481101561000257906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610b5c5781806001019250505b5b8080600101915050610ad4565b60008260ff16111515610b7c57610002565b6002338742604051808473ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140183815260200182815260200193505050506020604051808303816000866161da5a03f1156100025750506040518051906020015093506000604051805910610bf55750595b9080825280602002602001820160405250925060c06040519081016040528033815260200187815260200186815260200184815260200142815260200160008152602001506006600050600086815260200190815260200160002060005060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff02191690830217905550602082015181600101600050556040820151816002016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610ce657805160ff1916838001178555610d17565b82800160010185558215610d17579182015b82811115610d16578251826000505591602001919060010190610cf8565b5b509050610d429190610d24565b80821115610d3e5760008181506000905550600101610d24565b5090565b50506060820151816003016000509080519060200190828054828255906000526020600020908101928215610dbb579160200282015b82811115610dba5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff0219169083021790555091602001919060010190610d78565b5b509050610e029190610dc8565b80821115610dfe57600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550600101610dc8565b5090565b50506080820151816004016000505560a08201518160050160006101000a81548160ff021916908302179055509050507f0fe7226eb15d2c2be3d913430e37f58d6cc017678fe40524d846f66af3dc71c784338888604051808581526020018473ffffffffffffffffffffffffffffffffffffffff168152602001838152602001806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f168015610edf5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a150505b50505050565b6000600090505b600360005080549050811015610f91573373ffffffffffffffffffffffffffffffffffffffff16600360005082815481101561000257906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610f8357610002565b5b8080600101915050610eff565b60036000508054806001018281815481835581811511610fe357818360005260206000209182019101610fe29190610fc4565b80821115610fde5760008181506000905550600101610fc4565b5090565b5b5050509190906000526020600020900160005b33909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff02191690830217905550506040604051908101604052808381526020016000815260200150600460005060003373ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000506000820151816000016000505560208201518160010160005055905050505b50565b3373ffffffffffffffffffffffffffffffffffffffff16ff5b565b600260009054906101000a900460ff1681565b600360005081815481101561000257906000526020600020900160005b9150909054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60046000506020528060005260406000206000915090508060000160005054908060010160005054905082565b60066000506020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101600050549080600201600050908060040160005054908060050160009054906101000a900460ff16905085565b60006000508054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112315780601f1061120657610100808354040283529160200191611231565b820191906000526020600020905b81548152906001019060200180831161121457829003601f168201915b505050505081565b60016000508054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112d25780601f106112a7576101008083540402835291602001916112d2565b820191906000526020600020905b8154815290600101906020018083116112b557829003601f168201915b50505050508156', \par
     gas: 3000000\par
   \}, function(e, contract)\{\par
    console.log(e, contract);\par
    if (typeof contract.address != 'undefined') \{\par
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);\par
    \}\par
 \})\par
\pard\sa200\sl276\slmult1\b\fs24 3. Start mining and wait for address of mined contract to be returned and stop mining\b0\fs18\par
\tab miner.start(1)  //Should receive message after a while that says "Contract mined...."\par
\tab miner.stop(1)  //Copy the address returned for use later\par
\b\fs24 4. Create contract variable and associated with an interface (ABI)\par
\pard\li720\sa200\sl276\slmult1\b0\f1\fs18 var securityContract = web3.eth.contract([\{"constant":true,"inputs":[],"name":"name","outputs":[\{"name":"","type":"string"\}],"type":"function"\},\{"constant":true,"inputs":[\{"name":"","type":"uint256"\}],"name":"custodians","outputs":[\{"name":"","type":"address"\}],"type":"function"\},\{"constant":false,"inputs":[\{"name":"addresses","type":"address[]"\},\{"name":"addr","type":"address"\}],"name":"contains","outputs":[\{"name":"contained","type":"bool"\}],"type":"function"\},\{"constant":false,"inputs":[\{"name":"openingBalance","type":"uint256"\}],"name":"registerHolder","outputs":[],"type":"function"\},\{"constant":false,"inputs":[],"name":"kill","outputs":[],"type":"function"\},\{"constant":false,"inputs":[\{"name":"overrideProposal","type":"bytes32"\}],"name":"confirmOverride","outputs":[],"type":"function"\},\{"constant":true,"inputs":[],"name":"identifier","outputs":[\{"name":"","type":"string"\}],"type":"function"\},\{"constant":true,"inputs":[\{"name":"","type":"bytes32"\}],"name":"overrides","outputs":[\{"name":"accountToBeUpdated","type":"address"\},\{"name":"balanceChange","type":"int256"\},\{"name":"description","type":"string"\},\{"name":"timeProposed","type":"uint256"\},\{"name":"overrideGranted","type":"bool"\}],"type":"function"\},\{"constant":false,"inputs":[],"name":"getBalanceOnLoan","outputs":[\{"name":"balance","type":"uint256"\}],"type":"function"\},\{"constant":false,"inputs":[\{"name":"balanceChange","type":"int256"\},\{"name":"description","type":"string"\}],"name":"overrideBalance","outputs":[],"type":"function"\},\{"constant":true,"inputs":[\{"name":"","type":"address"\}],"name":"custodyBalances","outputs":[\{"name":"underCustody","type":"uint256"\},\{"name":"onLoan","type":"uint256"\}],"type":"function"\},\{"constant":false,"inputs":[],"name":"getBalanceUnderCustody","outputs":[\{"name":"balance","type":"uint256"\}],"type":"function"\},\{"constant":false,"inputs":[\{"name":"receiver","type":"address"\},\{"name":"amount","type":"uint256"\}],"name":"send","outputs":[],"type":"function"\},\{"constant":true,"inputs":[],"name":"idType","outputs":[\{"name":"","type":"uint8"\}],"type":"function"\},\{"inputs":[\{"name":"_name","type":"string"\},\{"name":"_identifier","type":"string"\},\{"name":"_idType","type":"uint8"\}],"type":"constructor"\},\{"anonymous":false,"inputs":[\{"indexed":false,"name":"from","type":"address"\},\{"indexed":false,"name":"to","type":"address"\},\{"indexed":false,"name":"amount","type":"uint256"\}],"name":"CustodyTransfer","type":"event"\},\{"anonymous":false,"inputs":[\{"indexed":false,"name":"proposalID","type":"bytes32"\},\{"indexed":false,"name":"accountToBeUpdated","type":"address"\},\{"indexed":false,"name":"amount","type":"int256"\},\{"indexed":false,"name":"description","type":"string"\}],"name":"ErrorCorrection","type":"event"\}]);\f0\par
\pard\sa200\sl276\slmult1\b\fs24 5. Assign addresss of mined contract to contract variable (use existing address below or replace with new address if registering your own contract)\b0\fs18\par
\tab var fordContract = securityContract.at("0x15c7d3cf21b0913636a700f059e814c3f0517f40");\par
\b\fs24 6. Register a holders of this asset and wait for mining confirmation \b0\fs18\par
\tab primary = eth.accounts[0]\par
\tab personal.unlockAccount(primary)\par
\tab fordContract.registerHolder.sendTransaction(5000, \{from: primary, gas: 300000\})\par
\tab miner.start(1)\par
\pard\li720\sa200\sl276\slmult1 fordContract.custodyBalances(primary)    //if this returns 5000 as the balance, we were successful\par
\pard\sa200\sl276\slmult1\tab miner.start(1)\par
\b\fs24 7. Register another holder of this asset on a different node to simulate another bank\par
\tab\b0\fs18 Follow steps 4-6 on a different Ethereum node \par
\b\fs24 8. Setup KYC identities\par
\pard\li720\sa200\sl276\slmult1\b0\fs20 //Do this on both Ethereum nodes. Change "ID_NTRS" in the second command to "ID_NYST" on the second node\par
\fs18 personal.unlockAccount(primary);\par
\pard\nowidctlpar\li720\sa200\sl276\slmult1\f1 var identityContract = web3.eth.contract([\{"constant":false,"inputs":[],"name":"getAttestedAssertionCount","outputs":[\{"name":"count","type":"uint256"\}],"type":"function"\},\{"constant":false,"inputs":[],"name":"kill","outputs":[],"type":"function"\},\{"constant":false,"inputs":[\{"name":"assertionType","type":"uint256"\},\{"name":"key","type":"string"\},\{"name":"value","type":"string"\}],"name":"assert","outputs":[],"type":"function"\},\{"constant":false,"inputs":[\{"name":"requestee","type":"address"\},\{"name":"assertionType","type":"uint256"\}],"name":"getSessionKey","outputs":[\{"name":"encryptedSessionKey","type":"string"\}],"type":"function"\},\{"constant":false,"inputs":[\{"name":"requestee","type":"address"\},\{"name":"assertionType","type":"uint256"\},\{"name":"sessionKey","type":"string"\},\{"name":"description","type":"string"\}],"name":"grant","outputs":[],"type":"function"\},\{"constant":false,"inputs":[\{"name":"assertionTypes","type":"uint256[]"\}],"name":"attest","outputs":[],"type":"function"\},\{"constant":false,"inputs":[\{"name":"assertionType","type":"uint256"\}],"name":"getAttesteeCount","outputs":[\{"name":"count","type":"uint256"\}],"type":"function"\},\{"constant":false,"inputs":[\{"name":"requestee","type":"address"\}],"name":"revoke","outputs":[],"type":"function"\},\{"constant":false,"inputs":[\{"name":"assertionType","type":"uint256"\}],"name":"get","outputs":[\{"name":"key","type":"string"\},\{"name":"value","type":"string"\}],"type":"function"\},\{"constant":false,"inputs":[\{"name":"index","type":"uint256"\}],"name":"getAttestedAssertion","outputs":[\{"name":"assertionType","type":"uint256"\}],"type":"function"\},\{"constant":false,"inputs":[\{"name":"assertionType","type":"uint256"\},\{"name":"index","type":"uint256"\}],"name":"getAttestee","outputs":[\{"name":"attestee","type":"address"\}],"type":"function"\},\{"constant":false,"inputs":[\{"name":"requestee","type":"address"\}],"name":"getGrantedAssertionCount","outputs":[\{"name":"count","type":"uint256"\}],"type":"function"\},\{"constant":false,"inputs":[],"name":"getGranteeCount","outputs":[\{"name":"count","type":"uint256"\}],"type":"function"\},\{"constant":false,"inputs":[\{"name":"index","type":"uint256"\}],"name":"getGrantee","outputs":[\{"name":"grantee","type":"address"\},\{"name":"description","type":"string"\}],"type":"function"\},\{"constant":false,"inputs":[\{"name":"requestee","type":"address"\},\{"name":"index","type":"uint256"\}],"name":"getGrantedAssertion","outputs":[\{"name":"assertionType","type":"uint256"\}],"type":"function"\},\{"inputs":[],"type":"constructor"\}]);\par
\pard\li720\sa160\sl252\slmult1\lang1033 var ID_NTRS = identityContract.new(\par
   \{\par
     from: web3.eth.accounts[0], \par
     data: '60606040525b33600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908302179055505b611a428061003f6000396000f3606060405236156100d7576000357c0100000000000000000000000000000000000000000000000000000000900480630ea99159146100e457806341c0e1b51461010757806348e724dd146101165780635fb3fbdb146101bc57806360e28632146102495780636b9b7cd8146102f85780637495f9d41461034b57806374a8f103146103775780639507d39a1461038f578063981eb4dd146104725780639f70ed771461049e578063a21d0afe146104e9578063e8f1ddb714610515578063ecdd029714610538578063fd29f856146105d9576100d7565b6100e25b610002565b565b005b6100f1600480505061197e565b6040518082815260200191505060405180910390f35b610114600480505061060e565b005b6101ba6004808035906020019091908035906020019082018035906020019191908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050909091908035906020019082018035906020019191908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509090919050506106a2565b005b6101db60048080359060200190919080359060200190919050506115f9565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f16801561023b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102f66004808035906020019091908035906020019091908035906020019082018035906020019191908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050909091908035906020019082018035906020019191908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050909091905050610ff4565b005b610349600480803590602001908201803590602001919190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509090919050506116f4565b005b61036160048080359060200190919050506119bc565b6040518082815260200191505060405180910390f35b61038d6004808035906020019091905050610cb3565b005b6103a5600480803590602001909190505061099a565b6040518080602001806020018381038352858181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156104095780820380516001836020036101000a031916815260200191505b508381038252848181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156104625780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b6104886004808035906020019091905050611991565b6040518082815260200191505060405180910390f35b6104bd60048080359060200190919080359060200190919050506119e5565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104ff6004808035906020019091905050611564565b6040518082815260200191505060405180910390f35b6105226004805050611429565b6040518082815260200191505060405180910390f35b61054e600480803590602001909190505061143c565b604051808373ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156105ca5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b6105f860048080359060200190919080359060200190919050506115a3565b6040518082815260200191505060405180910390f35b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561069f57600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b5b565b6000600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561070057610002565b81600160005060008681526020019081526020016000206000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061076357805160ff1916838001178555610794565b82800160010185558215610794579182015b82811115610793578251826000505591602001919060010190610775565b5b5090506107bf91906107a1565b808211156107bb57600081815060009055506001016107a1565b5090565b50508260036000506000600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060008681526020019081526020016000206000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061087057805160ff19168380011785556108a1565b828001600101855582156108a1579182015b828111156108a0578251826000505591602001919060010190610882565b5b5090506108cc91906108ae565b808211156108c857600081815060009055506001016108ae565b5090565b505060066000506000858152602001908152602001600020600050805460008255906000526020600020908101906109229190610904565b8082111561091e5760008181506000905550600101610904565b5090565b5b50600090505b6007600050805490508160ff1610156109935783600760005082815481101561000257906000526020600020900160005b5054141561098557600760005081815481101561000257906000526020600020900160005b50600090555b5b8080600101915050610929565b5b50505050565b602060405190810160405280600081526020015060206040519081016040528060008152602001506020604051908101604052806000815260200150600160005060008581526020019081526020016000206000508054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a835780601f10610a5857610100808354040283529160200191610a83565b820191906000526020600020905b815481529060010190602001808311610a6657829003601f168201915b50505050509050600081511115610c2f57600360005060003373ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060008581526020019081526020016000206000508054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b6b5780601f10610b4057610100808354040283529160200191610b6b565b820191906000526020600020905b815481529060010190602001808311610b4e57829003601f168201915b505050505092508250600160005060008581526020019081526020016000206000508054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c215780601f10610bf657610100808354040283529160200191610c21565b820191906000526020600020905b815481529060010190602001808311610c0457829003601f168201915b505050505091508150610cac565b604060405190810160405280600981526020017f756e646566696e6564000000000000000000000000000000000000000000000081526020015092508250604060405190810160405280600981526020017f756e646566696e65640000000000000000000000000000000000000000000000815260200150915081505b5b50915091565b6000600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610d1157610002565b600090505b600460005060008373ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050805490508160ff161015610e4f57600360005060008373ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000506000600460005060008573ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005083815481101561000257906000526020600020900160005b50548152602001908152602001600020600050805460018160011615610100020316600290046000825580601f10610e035750610e40565b601f016020900490600052602060002090810190610e3f9190610e21565b80821115610e3b5760008181506000905550600101610e21565b5090565b5b505b8080600101915050610d16565b600460005060008373ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005080546000825590600052602060002090810190610eb99190610e9b565b80821115610eb55760008181506000905550600101610e9b565b5090565b5b506000905080505b6005600050805490508160ff161015610fef578173ffffffffffffffffffffffffffffffffffffffff16600560005082815481101561000257906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610fe157600560005081815481101561000257906000526020600020900160005b6101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600560005081818054905003915081815481835581811511610fd857818360005260206000209182019101610fd79190610fb9565b80821115610fd35760008181506000905550600101610fb9565b5090565b5b50505050610fef565b5b8080600101915050610ec2565b5b5050565b6000600090505b600460005060008673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050805490508160ff16101561109b5783600460005060008773ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005082815481101561000257906000526020600020900160005b5054141561108d57610002565b5b8080600101915050610ffb565b82600360005060008773ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060008681526020019081526020016000206000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061112857805160ff1916838001178555611159565b82800160010185558215611159579182015b8281111561115857825182600050559160200191906001019061113a565b5b5090506111849190611166565b808211156111805760008181506000905550600101611166565b5090565b5050600460005060008673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005080548060010182818154818355818115116112025781836000526020600020918201910161120191906111e3565b808211156111fd57600081815060009055506001016111e3565b5090565b5b5050509190906000526020600020900160005b869091909150555081600260005060008773ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061129657805160ff19168380011785556112c7565b828001600101855582156112c7579182015b828111156112c65782518260005055916020019190600101906112a8565b5b5090506112f291906112d4565b808211156112ee57600081815060009055506001016112d4565b5090565b50506000905080505b6005600050805490508160ff161015611390578473ffffffffffffffffffffffffffffffffffffffff16600560005082815481101561000257906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561138257611422565b5b80806001019150506112fb565b600560005080548060010182818154818355818115116113e2578183600052602060002091820191016113e191906113c3565b808211156113dd57600081815060009055506001016113c3565b5090565b5b5050509190906000526020600020900160005b87909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff02191690830217905550505b5050505050565b6000600560005080549050905080505b90565b60006020604051908101604052806000815260200150600560005083815481101561000257906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691508150600260005060008373ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000508054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115555780601f1061152a57610100808354040283529160200191611555565b820191906000526020600020905b81548152906001019060200180831161153857829003601f168201915b5050505050905080505b915091565b6000600460005060008373ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005080549050905080505b919050565b6000600460005060008473ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005082815481101561000257906000526020600020900160005b5054905080505b92915050565b6020604051908101604052806000815260200150600360005060008473ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060008381526020019081526020016000206000508054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116e45780601f106116b9576101008083540402835291602001916116e4565b820191906000526020600020905b8154815290600101906020018083116116c757829003601f168201915b5050505050905080505b92915050565b60006000600060006000600094505b85518560ff1610156119755785858151811015610002579060200190602002015193506001925060019150600090505b60066000506000858152602001908152602001600020600050805490508160ff1610156117f2573373ffffffffffffffffffffffffffffffffffffffff166006600050600086815260200190815260200160002060005082815481101561000257906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156117e4576000915081505b5b8080600101915050611733565b811561189e5760066000506000858152602001908152602001600020600050805480600101828181548183558181151161185e5781836000526020600020918201910161185d919061183f565b80821115611859576000818150600090555060010161183f565b5090565b5b5050509190906000526020600020900160005b33909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff02191690830217905550505b6000905080505b6007600050805490508160ff1610156118f35783600760005082815481101561000257906000526020600020900160005b505414156118e5576000925082505b5b80806001019150506118a5565b8215611967576007600050805480600101828181548183558181151161194b5781836000526020600020918201910161194a919061192c565b80821115611946576000818150600090555060010161192c565b5090565b5b5050509190906000526020600020900160005b86909190915055505b5b8480600101955050611703565b5b505050505050565b6000600760005080549050905080505b90565b6000600760005082815481101561000257906000526020600020900160005b5054905080505b919050565b60006006600050600083815260200190815260200160002060005080549050905080505b919050565b60006006600050600084815260200190815260200160002060005082815481101561000257906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905080505b9291505056', \par
     gas: 3000000\par
   \}, function(e, contract)\{\par
    console.log(e, contract);\par
    if (typeof contract.address != 'undefined') \{\par
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);\par
    \}\par
 \})\fs22\par
\pard\nowidctlpar\li720\sa200\sl276\slmult1\lang9\fs20\par
//Now register these idenitites at the addresss provided when the contracts were mined\fs18\par
var NorthernTrustID= identityContract.at("0xfe497052a6f67b36a75712d5c9799c91e8bfe39c");\par
var NYStreetID= identityContract.at("0xaba1b8435b9d655e0018ba2929d836fcf45ad1e8");\par
\pard\nowidctlpar\sa200\sl276\slmult1\b\f0\fs24 9. Register entities into KYC\b0\fs18  \par
\pard\nowidctlpar\li720\sa200\sl276\slmult1\lang1033\f1 var name = 0;\par
var post = 1;\par
var address = 2;\par
personal.unlockAccount(primary)\par
\pard\li720\sa200\sl276\slmult1\lang9 NorthernTrustID\lang1033 .assert.sendTransaction(0,"name", "Northern Trust Corporation",\{from: primary, gas: 3000000\});\par
\lang9 NorthernTrustID\lang1033 .assert.sendTransaction(1,"post", "50 South LaSalle St. Chicago, IL 60603 USA",\{from: primary, gas: 3000000\});\par
\lang9 NorthernTrustID\lang1033 .assert.sendTransaction(2,"addr", "0xb89a2151e7b27b28831e41417e9a2eb0e1128949",\{from: primary, gas: 3000000\});\par
\lang9 NYStreetID\lang1033 .assert.sendTransaction(0,"name", "New York Street Bank Corportation",\{from: primary, gas: 3000000\});\par
\lang9 NYStreetID\lang1033 .assert.sendTransaction(1,"post", "10 Wall St. New York,  NY 10286 USA",\{from: primary, gas: 3000000\});\par
\lang9 NYStreetID\lang1033 .assert.sendTransaction(2,"addr", "0x8e6afcc3d3bbcb34e835cd583fba0da3ade9209c",\{from: primary, gas: 3000000\});\fs22\par
\pard\nowidctlpar\li720\sa200\sl276\slmult1\lang9\f0\fs18 miner.start(1)\par
\f1 NorthernTrustID\f0 .get.call(\f1 address\f0 )\tab //Stop mining when these return the key-values from the command above\par
\f1 NYStreetID\f0 .get.call(\f1 address\f0 )\par
miner.stop(1)\tab\par
\b\fs20 Attest to the assertions from above\b0\fs18\par
 NorthernTrustID.attest.sendTransaction([name,], \{from: primary, gas: 3000000\})\par
\pard\sa200\sl276\slmult1\ul\fs52 Demo\ulnone\par
\b\fs24 Explain variables\par
\b0\fs18\tab fordContract.name()\par
\tab fordContract.address\tab\tab //This is the public address of contract that defines the Ford stock\par
\tab fordContract.identifier()\tab\tab //CUSIP of Ford stock\par
\tab NorthernTrustID.get.call(name)\par
\tab NorthernTrustID.get.call(post)\par
\tab NorthernTrustID.get.call(address)\par
\tab\f1 NYStreetID\f0 .get.call(name)\par
\tab\f1 NYStreetID\f0 .get.call(post)\par
\tab\f1 NYStreetID\f0 .get.call(address)\par
\b\fs24 On machine representing NY Street Bank, transfer assets to Northern Trust\b0\fs18\par
\b\fs20 Lookup address of Northern Trust\b0\fs18\par
\tab\f1 NorthernTrustID.get.call(address)\par
\b\f0\fs20 Check that the balances is greater than zero\tab\fs18\par
\b0\tab fordContract.custodyBalances.call(primary)   \par
\b\fs20 Send transaction to blockchain to transfer assets to Northern Trust\fs18\par
\pard\li720\sa200\sl276\slmult1\b0 fordContract.send.sendTransaction(\f1 NorthernTrustID.get.call(address)[1], \f0 500, \lang1033\f1\{from: primary, gas: 3000000\})\lang9\f0\par
\pard\sa200\sl276\slmult1\b\fs24 On machine representing Northern Trust\b0\fs18\par
\b\fs20 Listen for CustodyTransfer events\b0\fs18\par
\pard\li720\sa200\sl276\slmult1 var incomingSecuritiesEvent = fordContract.CustodyTransfer().watch(function(error, result) \{\par
    console.log("Incoming security transfer...");\par
\});\par
\pard\sa200\sl276\slmult1\b\fs20 Receive request for asset under custody transfer\par
\tab In progress...\par
Lookup public address of custody client\par
\tab In progress...\par
Post to GDS\line\tab In progress...\b0\fs52\par
\fs22\par
}
 